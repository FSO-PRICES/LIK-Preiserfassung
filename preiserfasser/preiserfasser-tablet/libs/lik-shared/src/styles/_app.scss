// http://ionicframework.com/docs/v2/theming/

// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

// @import "../../node_modules/perfect-scrollbar/dist/css/perfect-scrollbar.css";
@import './_variables.scss';
@import './mixins.scss';

@import './buttons.scss';
@import './dialog.scss';

// .gu-mirror{position:fixed!important;margin:0!important;z-index:9999!important;opacity:.8;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";filter:alpha(opacity=80)}.gu-hide{display:none!important}.gu-unselectable{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.gu-transit{opacity:.2;-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";filter:alpha(opacity=20)}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 400;
    src: local('Roboto'), local('Roboto-Regular'), url(../assets/fonts/roboto-regular.ttf) format('truetype');
    unicode-range: U + 0000-00ff, U + 0131, U + 0152-0153, U + 02c6, U + 02da, U + 02dc, U + 2000-206f, U + 2074,
        U + 20ac, U + 2212, U + 2215, U + E0FF, U + EFFD, U + F000;
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 500;
    src: local('Roboto Medium'), local('Roboto-Medium'), url(../assets/fonts/roboto-medium.ttf) format('truetype');
    unicode-range: U + 0000-00ff, U + 0131, U + 0152-0153, U + 02c6, U + 02da, U + 02dc, U + 2000-206f, U + 2074,
        U + 20ac, U + 2212, U + 2215, U + E0FF, U + EFFD, U + F000;
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 700;
    src: local('Roboto Bold'), local('Roboto-Bold'), url(../assets/fonts/roboto-bold.ttf) format('truetype');
    unicode-range: U + 0000-00ff, U + 0131, U + 0152-0153, U + 02c6, U + 02da, U + 02dc, U + 2000-206f, U + 2074,
        U + 20ac, U + 2212, U + 2215, U + E0FF, U + EFFD, U + F000;
}

html,
ion-app.md {
    font-family: 'Roboto', sans-serif !important;
    background-color: $outer-space;
    background-image: url("data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000000' fill-opacity='0.4' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E");
}

ion-content {
    --ion-background-color: transparent;
}

ion-item {
    .label-stacked.sc-ion-label-md-h {
        padding-left: 8px;
        margin-top: 13px;
        margin-right: 8px;
        height: 28px;
    }
    .native-input.sc-ion-input-md {
        background-color: $white;
    }
    .label-stacked.sc-ion-label-md-h {
        transform: none;
    }
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: 1em;
    line-height: 1.25em;
    font-weight: 500;
    margin: 0 0 1em 0;
    &.large {
        font-size: 1.25em;
        line-height: 1.5em;
    }
    &.small {
        font-size: 0.75em;
        line-height: 1em;
    }
    &.secondary {
        font-weight: 400;
        color: $trout;
    }
}

.app-root.pef-desktop {
    max-width: $pef-app-max-width;
    margin: 0 auto;
    position: relative;

    ion-content .scroll-content {
        overflow-y: auto;
    }
}

ion-content.md {
    color: $outer-space;
}

.pef-scroll-container {
    overflow-x: hidden;
    overflow-y: scroll;
}

.label-md {
    font-size: 1.2rem;
}

.item.md {
    --border-width: 0;
    --border-style: none;
    --border-color: transparent;
}

form.form-show-validation-hints {
    .item.md.pef-item.ng-invalid {
        ion-input,
        ion-textarea,
        select {
            border-bottom-color: $alizarin-crimson;
        }
    }
}

form.stacked-form {
    .pef-select {
        display: flex;
        flex: 1;
        align-self: stretch;
    }

    select {
        flex: 1;
        background-color: $white;
        border: none;
        padding: 6px 8px;
        margin: 0 0 2px 0 !important;
    }
}

// ion-item.item.md.pef-item {
//     padding-left: 0;
//     background-color: transparent;
//     ::ng-deep {
//         .input-wrapper {
//             height: calc(2.75 * 1em);
//         }
//         &.item.md .item-inner {
//             padding-right: 0;
//             border-bottom-width: 0;
//         }
//         ion-label {
//             padding-left: 8px;
//             font-weight: 500;
//             color: $oslo-gray;
//             line-height: 1.75em;
//         }
//         .native-input {
//             margin: 6px 0;
//         }
//         ion-input,
//         ion-textarea {
//             background-color: white;
//             border-bottom: 2px solid $hit-gray;
//             padding-left: 8px;
//             padding-right: 8px;
//             ::selection {
//                 background-color: $scooter;
//                 color: $outer-space;
//             }
//             &.readonly {
//                 background-color: $alto;
//             }
//         }
//         &.item-has-focus {
//             ion-input,
//             ion-textarea {
//                 border-bottom-color: $blue-chill;
//             }
//             .item-inner {
//                 box-shadow: none;
//             }
//             &:last-child {
//                 box-shadow: none;
//             }
//         }
//         &.item-has-focus.on-dark {
//             ion-label {
//                 color: $bright-sun;
//             }
//             ion-input,
//             ion-textarea {
//                 border-bottom-color: $bright-sun;
//             }
//         }
//         input {
//             outline: none;
//         }
//     }
// }

form.form-show-validation-hints {
    .item.md.pef-item.on-dark.ng-invalid {
        ion-input {
            border-bottom-color: orange;
        }
        ion-label {
            color: white;
        }
    }
}

// .list-md .item-input:last-child {
//     border-bottom: 0;
// }

// Radio overrides

ion-list[radio-group] {
    .item-radio {
        background-color: transparent;
        padding-left: 0;
        @include set-min-height(2);
        .item-inner {
            border-bottom-width: 0;
            .input-wrapper {
                order: 1;
            }
        }
        ion-label {
            font-weight: 500;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        .radio-icon {
            height: 20px;
            width: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .radio-inner {
            position: static;
            width: 10px;
            height: 10px;
        }
    }
}

.item.md .radio-md,
.item.item.md .checkbox-md {
    @include set-margin(0.5625, 0.625, 0.5625, 0);
}

.item.md.item-radio ion-label {
    font-size: 1em;
}

.radio-md.radio-disabled,
.item.md.item-radio-disabled ion-label {
    color: $trout;
}

.item.md.item-radio-disabled {
    .radio-icon {
        border-color: $oslo-gray;
    }
    .radio-inner {
        background-color: $oslo-gray;
    }
    ion-label {
        color: $oslo-gray;
    }
}

ion-list {
    ion-item.item.md.item-checkbox {
        background-color: transparent;
        min-height: initial;
        padding-left: 0;
        .item-inner {
            border-bottom-width: 0;
        }
    }
    ion-checkbox.checkbox-md {
        .checkbox-icon {
            height: 20px;
            width: 20px;
        }
        .checkbox-checked .checkbox-inner {
            width: 7px;
            height: 14px;
            left: 5px;
        }
    }
    .item-checkbox {
        ion-label.label-md:not(.pef-checkbox-label) {
            font-size: 1em;
            font-weight: 500;
            margin-top: 5px;
            margin-bottom: 5px;
        }

        .checkbox-md {
            .checkbox-icon {
                background-color: transparent;
            }
        }
        &.item-checkbox-checked {
            ion-label.label-md {
                color: $java;
            }
            .checkbox-icon {
                background-color: $java;
            }
        }
    }
}

ion-list.checkboxes-as-radios {
    .item-checkbox {
        background-color: transparent;
        padding-left: 0;
        @include set-min-height(2);
        .item-inner {
            border-bottom-width: 0;
            .input-wrapper {
                order: 1;
            }
        }
        ion-label {
            font-weight: 500;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        .checkbox-icon {
            height: 20px;
            width: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .checkbox-inner {
            position: static;
            width: 10px;
            height: 10px;
        }
    }
}

.button-md.pef-icon-secondary {
    background-color: $wild-sand;
    fill: $blue-chill;
    box-shadow: none;
    &:hover:not(.disable-hover) {
        background-color: $blue-chill;
        opacity: 1;
    }
}

input[type='number']::-webkit-outer-spin-button,
input[type='number']::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.visibility-hidden {
    visibility: hidden !important;
}

.display-none {
    display: none !important;
}

ion-popover.popover-md {
    background-color: rgba(0, 0, 0, 0.6);

    .popover-content {
        width: initial;
    }
}

.label-validation-error {
    color: $flamingo;
}

@media screen and (max-width: 1280px) {
    html {
        font-size: 0.85vw;
    }
    .item.md.pef-item .input-wrapper {
        height: auto;
    }
}

@media print {
    body {
        position: static;
        max-height: none;
        overflow: visible;
    }
    ion-nav {
        position: static;
        overflow: visible;
    }
    ion-app,
    ion-nav,
    .ion-page {
        contain: none;
        height: initial;
    }
    .app-root,
    .app-root.pef-desktop {
        position: static;
        contain: none;
    }
    // @page {
    //     margin: 0px auto;
    // }
}
